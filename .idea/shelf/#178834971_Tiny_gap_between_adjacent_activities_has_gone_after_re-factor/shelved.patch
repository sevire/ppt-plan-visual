Index: source/tests/test_plan_activity.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from unittest import TestCase\n\nfrom colour import Color\nfrom ddt import ddt, data, unpack\nfrom pptx import Presentation\nfrom pptx.util import Cm\n\nfrom source.refactor_temp.shape_formatting import ShapeFormatting\nfrom source.refactor_temp.activity_layout_attributes import ActivityLayoutAttributes\nfrom source.refactor_temp.plan_activity import PlanActivity\nfrom source.plot_driver import PlotDriver\nfrom source.tests.testing_utilities import parse_date\nfrom source.refactor_temp.visual_element_shape import VisualElementShape\n\nplan_visual_config_test_data = {\n    'vis_cfg_01': {\n        'top': Cm(0),\n        'left': Cm(0),\n        'bottom': Cm(20),\n        'right': Cm(30),\n        'track_height': Cm(1),\n        'track_gap': Cm(0.5),\n        'min_start_date': parse_date('2021-01-01'),\n        'max_end_date': parse_date('2021-12-31'),\n        'milestone_width': None,\n        'milestone_text_width': Cm(0.5),\n        'activity_text_width': Cm(5),\n        'text_margin': Cm(0.2),\n        'activity_shape': 'RECTANGLE',\n        'milestone_shape': 'DIAMOND'\n    }\n}\ndisplay_attribute_test_data = {\n    'disp_01': {\n        'line_colour': Color(rgb=(0, 0, 0)),\n        'fill_colour': Color(rgb=(0, 0, 0)),\n        'font_colour': Color(rgb=(0, 0, 0)),\n        'text_layout': Color(rgb=(0, 0, 0)),\n        'corner_radius': Cm(0.1)\n    }\n}\n\nlayout_attributes_test_records = {\n    'layout_01': {\n        'swimlane_name': 'yyy',\n        'track_number': 1,\n        'number_of_tracks_to_span': 1,\n        'text_layout': 'shape'\n    }\n}\n\nnum_days_in_date_range = 365\n\nswimlane_test_data_records = {\n    'swim_01': {\n        'Swimlane 1': {\n            'start_track': 1,\n            'end_track': 5\n        }\n    }\n}\n\nactivity_test_data = {\n    'act_01': {\n        'activity_id': 12345,\n        'description': 'Test activity 01',\n        'activity_type': 'activity',\n        'start_date': parse_date('2021-01-01'),\n        'end_date': parse_date('2021-01-31'),\n        'display_shape': VisualElementShape.ROUNDED_RECTANGLE,\n    }\n}\n\n\ntest_records = [\n    (\n        activity_test_data['act_01'],\n        layout_attributes_test_records['layout_01'],\n        display_attribute_test_data['disp_01'],\n        display_attribute_test_data['disp_01'],\n        plan_visual_config_test_data['vis_cfg_01'],\n        swimlane_test_data_records['swim_01'],\n        {  # Expected results record for this combination of test data\n            'is_past': True,\n            'is_future': False,\n            'is_current': False,\n            'plot_start': 0,\n        }\n    )\n]\n\n\n@ddt\nclass TestPlanActivity(TestCase):\n    @data(*test_records)\n    @unpack\n    def test_create_plan_activity(\n            self,\n            activity_data,\n            layout_data,\n            display_data,\n            done_display_data,\n            vis_cfg,\n            swimlane_data,\n            exp_res\n    ):\n        layout_properties = ActivityLayoutAttributes(\n            layout_data['swimlane_name'],\n            layout_data['track_number'],\n            layout_data['number_of_tracks_to_span'],\n            layout_data['text_layout']\n        )\n\n        display_properties = ShapeFormatting(\n            line_colour=display_data['line_colour'],\n            fill_colour=display_data['line_colour'],\n            corner_radius=display_data['corner_radius']\n        )\n\n        done_display_properties = ShapeFormatting(\n            line_colour=done_display_data['line_colour'],\n            fill_colour=done_display_data['line_colour'],\n        )\n        plot_driver = PlotDriver(vis_cfg)\n        plot_driver.num_days_in_date_range = num_days_in_date_range\n\n        activity = PlanActivity(\n            activity_data['activity_id'],\n            activity_data['description'],\n            activity_data['activity_type'],\n            activity_data['start_date'],\n            activity_data['end_date'],\n            layout_properties,\n            activity_data['display_shape'],\n            plot_driver,\n            display_properties,\n            display_properties,\n            today_override=None,\n            swimlane_start_track=1,\n        )\n\n        pres = Presentation()\n        slide_layout = pres.slide_layouts[0]\n        slide = pres.slides.add_slide(slide_layout)\n        shapes = slide.shapes\n\n        plotted_shapes = activity.plot_ppt_shapes(shapes)\n\n        self.assertEqual(1, len(plotted_shapes))\n        plotted_shape = plotted_shapes[0]\n\n        self.assertEqual(exp_res['is_past'], activity.is_past())\n        self.assertEqual(exp_res['is_future'], activity.is_future())\n        self.assertEqual(exp_res['is_current'], activity.is_current())\n        self.assertEqual(exp_res['plot_start'], plotted_shape.left)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/source/tests/test_plan_activity.py b/source/tests/test_plan_activity.py
--- a/source/tests/test_plan_activity.py	(revision 1b001f5df02f16fde1d1c605754e6dd6ad29a88c)
+++ b/source/tests/test_plan_activity.py	(date 1626086568639)
@@ -22,7 +22,7 @@
         'track_gap': Cm(0.5),
         'min_start_date': parse_date('2021-01-01'),
         'max_end_date': parse_date('2021-12-31'),
-        'milestone_width': None,
+        'milestone_width': Cm(0.4),
         'milestone_text_width': Cm(0.5),
         'activity_text_width': Cm(5),
         'text_margin': Cm(0.2),
